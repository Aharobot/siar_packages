<?xml version="1.0"?>
<launch>
  
  <arg name="joystick" default="true"/>
  <arg name="emulate_laser" default="true"/>
  <arg name="ip_address" default="192.168.168.11"/>
  
  <!-- TF stuff (only odom is going through the wifi) -->
  <include file="$(find siar_driver)/launch/sensor_transform_siar_4_cam.launch"/>
  <node pkg="odom_to_tf" type="odom_to_tf.py" name="odom_to_tf"/>
  <include file="$(find openni2_launch)/launch/openni2.launch">
    <arg name="camera" value="front"/>
    <arg name="load_driver" value="false"/>
  </include>
  <include file="$(find openni2_launch)/launch/openni2.launch">
    <arg name="camera" value="back"/>
    <arg name="load_driver" value="false"/>
  </include>
  
  <!-- Communication stuff -->
  <include file="$(find udp_bridge)/launch/udp_client.launch">
    <arg name="ip_address" value="$(arg ip_address)"/>
  </include>
  
  <!-- Point cloud generation -->
  <node name="uncompresser" pkg="image_transport" type="republish"
        args="compressedDepth in:=/front_web/depth_registered/image_raw raw out:=/front/depth_registered/image_raw"/>

<node pkg="nodelet" type="nodelet" args="manager" name="depth_transforms_manager" />
<node pkg="nodelet" type="nodelet" name="cloudify"
      args="load depth_image_proc/point_cloud_xyz depth_transforms_manager">
  <!-- Input: Rectified depth image, registered to the RGB camera. -->
  <remap from="image_rect" to="/front/depth_registered/image_raw"/> 
  <remap from="camera_info" to="/front_web/depth_registered/camera_info"/>
  <!-- Output: XYZRGB point cloud. -->
  <remap from="points" to="/front/points"/>
</node>

  
  <!-- Representation stuff-->
<!--   <node pkg="rviz" type="rviz" name="rviz" args="-d ../.rviz/barcelona_junio.rviz"/> -->
  <node pkg="rqt_gui" type="rqt_gui" name="rqt" />
  <include file="$(find siar_stl_model)/launch/siar.launch"/>
  
  <!-- Joystick node that will be sent over the UDP link-->
  <node pkg="joy" type="joy_node" name="joy_node"/>
  
  <!-- Run localization on the laptop also -->
  <include file="$(find amcl_sewer)/launch/amcl_base_station.launch"/>
</launch>
